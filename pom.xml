<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.reactome.server.service</groupId>
    <artifactId>content-service</artifactId>

    <packaging>war</packaging>
    <version>2.1.0</version>
    <name>content-service</name>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.3</version>
    </parent>

    <description>
        The Reactome Content Service provides a series of methods via a RESTFul API to allow programmatic access to
        Reactome content
    </description>
    <url>https://github.com/reactome-pwp/content-service</url>
    <organization>
        <name>The European Bioinformatics Institute</name>
        <url>http://www.ebi.ac.uk/</url>
    </organization>

    <developers>
        <developer>
            <id>gviteri</id>
            <name>Guilherme S Viteri</name>
            <email>gviteri@ebi.ac.uk</email>
            <organization>http://www.ebi.ac.uk/</organization>
        </developer>
        <developer>
            <id>fkorn</id>
            <name>Florian Korninger</name>
        </developer>
    </developers>

    <properties>
        <graph.core>2.0.0</graph.core>
        <search.core>1.4.4</search.core>
        <interactor.core>1.1.0</interactor.core>
        <diagram.exporter>2.0.1</diagram.exporter>
        <fireworks.exporter>1.2.0</fireworks.exporter>
        <reaction.exporter>1.2.0</reaction.exporter>
        <sbml.exporter>2.2.0</sbml.exporter>
        <event.pdf>1.1.0</event.pdf>
        <reactome.utils.version>1.1.0</reactome.utils.version>

        <servlet.version>4.0.1</servlet.version>
        <jsp.version>2.3.3</jsp.version>
        <jstl.version>1.2</jstl.version>
        <jackson.version>2.12.3</jackson.version>
        <swagger.version>3.0.0</swagger.version>
        <lang.version>3.12.0</lang.version>
        <activation.version>1.1.1</activation.version>
        <kryo.version>5.1.0</kryo.version>
        <tika.version>2.0.0</tika.version>
        <junit.version>5.8.0-M1</junit.version>
        <jackrabbit.version>3.4.3</jackrabbit.version>
        <pmd.version>3.14.0</pmd.version>
        <hamcrest.library.version>2.2</hamcrest.library.version>
        <json.path.version>2.5.0</json.path.version>
        <jsoup.version>1.13.1</jsoup.version>
        <jackson.annotations.version>2.12.3</jackson.annotations.version>
        <jackson.core>2.12.3</jackson.core>

        <jdk.version>11</jdk.version>
        <deploymentPath>/</deploymentPath>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.version>3.8.1</maven.compiler.version>
        <maven.resources.version>3.2.0</maven.resources.version>
        <maven.site.version>3.9.1</maven.site.version>
        <maven.javadoc.version>3.2.0</maven.javadoc.version>
        <maven.info.report.version>3.1.1</maven.info.report.version>
        <maven.surefire.version>3.0.0-M5</maven.surefire.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.reactome.server.graph</groupId>
            <artifactId>graph-core</artifactId>
            <version>${graph.core}</version>
        </dependency>

        <dependency>
            <groupId>org.reactome.server.search</groupId>
            <artifactId>search-core</artifactId>
            <version>${search.core}</version>
        </dependency>
        <!-- Interactors Core -->
        <dependency>
            <groupId>org.reactome.server.interactors</groupId>
            <artifactId>interactor-core</artifactId>
            <version>${interactor.core}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.xerial</groupId>
                    <artifactId>sqlite-jdbc</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- diagram exporter -->
        <dependency>
            <groupId>org.reactome.server.tools</groupId>
            <artifactId>diagram-exporter</artifactId>
            <version>${diagram.exporter}</version>
        </dependency>
        <dependency>
            <groupId>org.reactome.server.tools</groupId>
            <artifactId>fireworks-exporter</artifactId>
            <version>${fireworks.exporter}</version>
        </dependency>
        <dependency>
            <groupId>org.reactome.server.tools</groupId>
            <artifactId>reaction-exporter</artifactId>
            <version>${reaction.exporter}</version>
        </dependency>
        <dependency>
            <groupId>org.reactome.server.tools</groupId>
            <artifactId>sbml-exporter</artifactId>
            <version>${sbml.exporter}</version>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <!-- avoid Log4j2 vulnerability-->
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.reactome.server.tools</groupId>
            <artifactId>event-pdf</artifactId>
            <version>${event.pdf}</version>
        </dependency>
        <dependency>
            <groupId>org.reactome.server.utils</groupId>
            <artifactId>reactome-utils</artifactId>
            <version>${reactome.utils.version}</version>
        </dependency>

        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <!--provides support for . jsp file rendering        -->
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--Jsp Servlets -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
            <version>${jsp.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
        </dependency>
        <!-- Jackson JSON Processor -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!-- Swagger for API Documentation -->
        <!-- For the Spring Boot based projects, it's enough to add a single springfox-boot-starter dependency:-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-boot-starter</artifactId>
            <version>${swagger.version}</version>
        </dependency>

        <!-- Apache Tika - Apache Tikaâ„¢ toolkit detects and extracts metadata and text from over a thousand different file types -->
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>${tika.version}</version>
        </dependency>

        <!--Util-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${lang.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>${activation.version}</version>
        </dependency>

        <!-- Kryo serializer -->
        <dependency>
            <groupId>com.esotericsoftware</groupId>
            <artifactId>kryo</artifactId>
            <version>${kryo.version}</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>${hamcrest.library.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>${json.path.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- JAVA html parser -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
        </dependency>

        <!-- initializing:  java.lang.ClassNotFoundException: com.fasterxml.jackson.annotation.JsonKey-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.annotations.version}</version>
        </dependency>

        <!--Testing:  java.lang.NoClassDefFoundError: com/fasterxml/jackson/core/util/JacksonFeature, be able to run mvn test -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.core}</version>
        </dependency>

    </dependencies>

    <!-- Adding this profile for fixing the errors(see the link below) when packing to production,
         however it looks like we don't need this configuration for now as the server doesn't cry,
         Try not to use the log4j2 to avoid the vulnerability and then switch back to default logging system. -Dec,2021
         https://stackoverflow.com/questions/30792268/loggerfactory-is-not-a-logback-loggercontext-but-logback-is-on-the-classpath
     -->
<!--    <profiles>-->
<!--        &lt;!&ndash; Adding logging library when packaging to production &ndash;&gt;-->
<!--        <profile>-->
<!--            <id>Reactome-Server</id>-->
<!--            <activation>-->
<!--                <activeByDefault>true</activeByDefault>-->
<!--            </activation>-->
<!--            <dependencies>-->
<!--                <dependency>-->
<!--                    <groupId>org.springframework.boot</groupId>-->
<!--                    <artifactId>spring-boot-starter</artifactId>-->
<!--                    <exclusions>-->
<!--                        <exclusion>-->
<!--                            <groupId>org.springframework.boot</groupId>-->
<!--                            <artifactId>spring-boot-starter-logging</artifactId>-->
<!--                        </exclusion>-->
<!--                    </exclusions>-->
<!--                </dependency>-->
<!--                <dependency>-->
<!--                    <groupId>org.springframework.boot</groupId>-->
<!--                    <artifactId>spring-boot-starter-log4j2</artifactId>-->
<!--                </dependency>-->
<!--                <dependency>-->
<!--                    <groupId>ch.qos.logback</groupId>-->
<!--                    <artifactId>logback-classic</artifactId>-->
<!--                    <version>1.1.10</version>-->
<!--                </dependency>-->
<!--            </dependencies>-->
<!--        </profile>-->
<!--    </profiles>-->

    <build>

        <finalName>ContentService</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!--Plugin needed to force maven resources to latest version. Default version contains a bug-->
            <!--preventing maven to filter resources containg a @ symbol-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven.site.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.wagon</groupId>
                        <artifactId>wagon-webdav-jackrabbit</artifactId>
                        <version>${jackrabbit.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
            </plugin>

        </plugins>
    </build>

    <!--This configuration is needed so that javadoc is included in maven site-->
    <repositories>
        <!-- MAVEN central -->
        <repository>
            <id>central</id>
            <name>Maven Repository Switchboard</name>
            <layout>default</layout>
            <url>https://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>central-bck</id>
            <name>Maven Repository Switchboard</name>
            <layout>default</layout>
            <url>https://repo1.maven.org/maven/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <!-- EBI repo -->
        <repository>
            <id>nexus-ebi-repo</id>
            <name>The EBI internal repository</name>
            <url>https://www.ebi.ac.uk/Tools/maven/repos/content/groups/ebi-repo/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <!-- EBI SNAPSHOT repo -->
        <repository>
            <id>nexus-ebi-snapshot-repo</id>
            <name>The EBI internal snapshot repository</name>
            <url>https://www.ebi.ac.uk/Tools/maven/repos/content/groups/ebi-snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

        <!-- SBGN -->
        <repository>
            <id>biopax</id>
            <name>BioPax Repository</name>
            <url>http://www.biopax.org/m2repo/releases/</url>
        </repository>
    </repositories>

    <!--Configures the distribution to nexus repository -->
    <distributionManagement>
        <!-- EBI repo -->
        <repository>
            <id>pst-release</id>
            <name>EBI Nexus Repository</name>
            <url>http://www.ebi.ac.uk/Tools/maven/repos/content/repositories/pst-release</url>
        </repository>
        <!-- EBI SNAPSHOT repo -->
        <snapshotRepository>
            <uniqueVersion>false</uniqueVersion>
            <id>pst-snapshots</id>
            <name>EBI Nexus Snapshots Repository</name>
            <url>http://www.ebi.ac.uk/Tools/maven/repos/content/repositories/pst-snapshots</url>
        </snapshotRepository>
    </distributionManagement>
    <!--This configuration is needed so that javadoc is included in maven site-->
</project>