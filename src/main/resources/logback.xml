<?xml version="1.0" encoding="UTF-8"?>
<!--suppress XmlUnboundNsPrefix -->
<!--Logback official documentation:
        The syntax of logback configuration files is extremely flexible.
        As such, it is not possible to specify the allowed syntax with a DTD file or an XML schema.-->
<configuration>

    <!--Throwing a warning propertySetterException when application starts,
        failed to set property [smtpPort] to value "mail.port_IS_UNDEFINED",
        conversion to type [int] failed. fix by adding below to the file-->
    <property resource="service.properties"/>

    <appender name="INFO_STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d %-5level [%thread] %logger{0}: %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${logging.level}</level>
        </filter>
        <encoder>
            <pattern>%d %-5level [%thread] %logger{0}: %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="STDERR" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <target>System.err</target>
        <encoder>
            <pattern>%d %-5level: %msg%n</pattern>
        </encoder>
    </appender>

    <!-- Used to email urgent to treat exceptions -->
    <appender name="ONLY_EMAIL" class="org.reactome.server.service.utils.ScheduledSMTPAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <smtpHost>${mail.host}</smtpHost>
        <smtpPort>${mail.port}</smtpPort>
        <to>${mail.to}</to>
        <from>${mail.from}</from>
        <subject>${mail.subject}</subject>

        <maxMessages>1</maxMessages>
        <timeInterval>1</timeInterval>

        <layout class="ch.qos.logback.classic.html.HTMLLayout"/>
        <asynchronousSending>false</asynchronousSending>
    </appender>

    <logger name="onlyEmailLogger" level="WARN">
        <appender-ref ref="ONLY_EMAIL"/>
    </logger>

    <appender name="EMAIL" class="org.reactome.server.service.utils.ScheduledSMTPAppender">

        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <smtpHost>${mail.host}</smtpHost>
        <smtpPort>${mail.port}</smtpPort>
        <subject>${cnf.mail.error.subject}</subject>
        <from>${cnf.mail.error.from}</from>
        <to>${cnf.mail.error.to}</to>

        <maxMessages>5</maxMessages>
        <timeInterval>1</timeInterval>

        <layout class="ch.qos.logback.classic.html.HTMLLayout"/>
        <asynchronousSending>false</asynchronousSending>
    </appender>

    <logger name="errorLogger" level="WARN">
        <appender-ref ref="EMAIL"/>
        <appender-ref ref="STDOUT"/>
    </logger>

    <logger name="org.neo4j" level="ERROR"/> <!-- Remove neo4j info logging. It prints user credentials -->
    <logger name="org.springframework" level="ERROR"/>
    <logger name="org.reflections" level="WARN"/>
    <logger name="springfox.documentation" level="WARN"/>

    <logger name="threadLogger" level="${logging.level}" additivity="false">
        <appender-ref ref="INFO_STDOUT"/>
    </logger>

    <!--Root logger will log all messages to file that are not caught by other loggers-->
    <root>
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="STDERR"/>
    </root>
</configuration>